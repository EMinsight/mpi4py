name: dist

on:  # yamllint disable-line rule:truthy
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: read

jobs:

  docs:
    runs-on: ubuntu-latest

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Install LaTeX
      run:  |
        # Install Tex Live
        sudo apt update && \
        sudo apt install -y \
           texlive-latex-base \
           texlive-latex-recommended \
           texlive-latex-extra \
           latexmk \
           texinfo

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set SOURCE_DATE_EPOCH
      run:  |
        SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)
        echo SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH >> $GITHUB_ENV
        echo $(git log -1 --pretty=%ci) [timestamp=$SOURCE_DATE_EPOCH]

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3

    - name: Upgrade pip
      run:  python -m pip install -U pip

    - name: Install tox
      run:  python -m pip install -U tox

    - name: Build documentation
      run:  python -m tox run -m docs

    - name: Archive documentation
      run: |
        archive=mpi4py-docs.zip
        rootdir=${archive%.zip}
        ln -s docs $rootdir
        python conf/metadata.py version > $rootdir/version
        python -m zipfile -c $archive $rootdir

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: mpi4py-docs
        path: mpi4py-docs.zip

  sdist:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set SOURCE_DATE_EPOCH
      run:  |
        SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)
        echo SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH >> $GITHUB_ENV
        echo $(git log -1 --pretty=%ci) [timestamp=$SOURCE_DATE_EPOCH]

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3

    - name: Upgrade pip
      run:  python -m pip install -U pip

    - name: Install build and twine
      run:  python -m pip install -U build twine

    - name: Build source distribution
      run:  python -m build --sdist

    - name: Check source distribution
      run:  python -m twine check dist/mpi4py-*.tar.gz

    - name: Compute SHA256 checksum
      run:  sha256sum -b mpi4py-*.tar.gz >> sha256sum.txt
      working-directory: dist

    - name: Report SHA256 checksum
      run:  |
        echo '```'        >> $GITHUB_STEP_SUMMARY
        cat sha256sum.txt >> $GITHUB_STEP_SUMMARY
        echo '```'        >> $GITHUB_STEP_SUMMARY
      working-directory: dist

    - name: Upload distribution artifact
      uses: actions/upload-artifact@v4
      with:
        name: mpi4py-dist
        path: dist/mpi4py-*.tar.gz

    - if: ${{ github.event_name == 'release' }}
      name: Attest distribution artifact
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: dist/mpi4py-*.tar.gz

  gh-publish:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: sdist
    environment:
      name: gh
      url: https://github.com/mpi4py/mpi4py/releases
    permissions:
      contents: write

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@v4

    - name: Download distribution artifact
      uses: actions/download-artifact@v4
      with:
        name: mpi4py-dist
        path: dist

    - name: Publish package distributions to GitHub Releases
      run:  gh release upload $TAG dist/mpi4py-*.tar.gz
      env:
        TAG: ${{ github.event.release.tag_name }}
        GH_TOKEN: ${{ github.token }}

  docs-publish:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: docs
    environment:
      name: docs
      url: https://mpi4py.github.io/mpi4py/

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout documentation repository
      uses: actions/checkout@v4
      with:
        repository: mpi4py/mpi4py.github.io
        token: ${{ secrets.DOCS_PUBLISH_PAT }}

    - name: Download documentation artifact
      uses: actions/download-artifact@v4
      with:
        name: mpi4py-docs
        path: mpi4py

    - name: Update documentation
      run: |
        # unarchive
        docdir=mpi4py-docs
        unzip -q $docdir.zip
        mv $docdir/version .
        version=$(cat version)
        test ! -d $version
        mv $docdir $version
        rm -f stable
        ln -sf $version stable
      working-directory: mpi4py

    - name: Publish documentation
      run: |
        # publish
        git config user.name  "$(gh api /users/${GITHUB_ACTOR} | jq .name  -r)"
        git config user.email "$(gh api /users/${GITHUB_ACTOR} | jq .email -r)"
        version=$(cat version)
        git add $version stable
        git commit -m $version
        git show --stat
        git push
      working-directory: mpi4py
      env:
        GH_TOKEN: ${{ github.token }}

  pypi-publish:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: sdist
    environment:
      name: pypi
      url: https://pypi.org/p/mpi4py/
    permissions:
      id-token: write

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Download distribution artifact
      uses: actions/download-artifact@v4
      with:
        name: mpi4py-dist
        path: dist

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
